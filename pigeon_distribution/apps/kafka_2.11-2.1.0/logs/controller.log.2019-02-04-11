[2019-02-04 11:33:58,223] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-02-04 11:33:58,241] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2019-02-04 11:33:58,241] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2019-02-04 11:33:58,243] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2019-02-04 11:33:58,245] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2019-02-04 11:33:58,246] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2019-02-04 11:33:58,273] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2019-02-04 11:33:58,279] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2019-02-04 11:33:58,285] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2019-02-04 11:33:58,286] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2019-02-04 11:33:58,287] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2019-02-04 11:33:58,287] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2019-02-04 11:33:58,288] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2019-02-04 11:33:58,288] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2019-02-04 11:33:58,291] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2019-02-04 11:33:58,291] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2019-02-04 11:33:58,291] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2019-02-04 11:33:58,292] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2019-02-04 11:33:58,297] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ReplicaStateMachine)
[2019-02-04 11:33:58,297] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ReplicaStateMachine)
[2019-02-04 11:33:58,302] INFO [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ReplicaStateMachine)
[2019-02-04 11:33:58,303] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.PartitionStateMachine)
[2019-02-04 11:33:58,304] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.PartitionStateMachine)
[2019-02-04 11:33:58,306] INFO [RequestSendThread controllerId=0] Controller 0 connected to 10.37.129.2:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-02-04 11:33:58,306] INFO [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.PartitionStateMachine)
[2019-02-04 11:33:58,307] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2019-02-04 11:33:58,308] INFO [Controller id=0] Removing partitions Set() from the list of reassigned partitions in zookeeper (kafka.controller.KafkaController)
[2019-02-04 11:33:58,308] INFO [Controller id=0] No more partitions need to be reassigned. Deleting zk path /admin/reassign_partitions (kafka.controller.KafkaController)
[2019-02-04 11:33:58,317] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2019-02-04 11:33:58,318] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2019-02-04 11:33:58,318] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2019-02-04 11:33:58,319] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2019-02-04 11:33:58,319] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-02-04 11:33:58,329] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2019-02-04 11:34:03,333] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-02-04 11:34:03,335] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2019-02-04 11:39:03,340] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-02-04 11:39:03,340] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2019-02-04 11:44:03,342] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-02-04 11:44:03,342] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2019-02-04 11:49:03,359] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-02-04 11:49:03,359] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2019-02-04 11:54:03,362] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-02-04 11:54:03,363] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2019-02-04 11:59:22,081] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-02-04 11:59:22,082] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
